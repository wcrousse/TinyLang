%{
    open TinyLang2.AbstractSyntax
%}

%token <int> NUM
%token <string> ID
%token PLUS MINUS TIMES DIVIDE
%token LPARN RPARN
%token EOF

%left MINUS PLUS
%left TIMES DIVIDE

%start Main
%type <TinyLang2.AbstractSyntax.Expression> Main

%%

Main:
    Expr EOF { $1 }

Expr:
    ID { Id $1 }
    | NUM { Num $1 }
    | LPARN Expr RPARN { $2 }
    | Expr PLUS Expr { Prim("+", $1, $3)}
    | Expr MINUS Expr { Prim("-", $1, $3)}
    | Expr TIMES Expr { Prim("*", $1, $3)}